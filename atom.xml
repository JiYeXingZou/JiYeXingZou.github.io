<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Izumi Sagiri</title>
  
  <subtitle>个人博客</subtitle>
  <link href="https://jiyexingzou.github.io/atom.xml" rel="self"/>
  
  <link href="https://jiyexingzou.github.io/"/>
  <updated>2025-04-28T12:03:20.092Z</updated>
  <id>https://jiyexingzou.github.io/</id>
  
  <author>
    <name>Izumi Sagiri</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ResNet</title>
    <link href="https://jiyexingzou.github.io/2025/04/28/ResNet/"/>
    <id>https://jiyexingzou.github.io/2025/04/28/ResNet/</id>
    <published>2025-04-28T12:00:34.000Z</published>
    <updated>2025-04-28T12:03:20.092Z</updated>
    
    <content type="html"><![CDATA[<p>加更多层不会让你变差</p><p>残差块<br>f(x) &#x3D; x + g(x)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;加更多层不会让你变差&lt;/p&gt;
&lt;p&gt;残差块&lt;br&gt;f(x) &amp;#x3D; x + g(x)&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>批量归一化</title>
    <link href="https://jiyexingzou.github.io/2025/04/28/%E6%89%B9%E9%87%8F%E5%BD%92%E4%B8%80%E5%8C%96/"/>
    <id>https://jiyexingzou.github.io/2025/04/28/%E6%89%B9%E9%87%8F%E5%BD%92%E4%B8%80%E5%8C%96/</id>
    <published>2025-04-28T11:22:38.000Z</published>
    <updated>2025-04-28T11:24:44.997Z</updated>
    
    <content type="html"><![CDATA[<p>损失出现在最后，后面的层训练较快<br>数据在最底部<br>底部的层训练较慢<br>底部层一变化，所有都得跟着变<br>最后的那些层需要重新学习多次<br>导致收敛变慢</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;损失出现在最后，后面的层训练较快&lt;br&gt;数据在最底部&lt;br&gt;底部的层训练较慢&lt;br&gt;底部层一变化，所有都得跟着变&lt;br&gt;最后的那些层需要重新学习多次&lt;br&gt;导致收敛变慢&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>含并行连结的网络GoogLeNet</title>
    <link href="https://jiyexingzou.github.io/2025/04/28/%E5%90%AB%E5%B9%B6%E8%A1%8C%E8%BF%9E%E7%BB%93%E7%9A%84%E7%BD%91%E7%BB%9CGoogLeNet/"/>
    <id>https://jiyexingzou.github.io/2025/04/28/%E5%90%AB%E5%B9%B6%E8%A1%8C%E8%BF%9E%E7%BB%93%E7%9A%84%E7%BD%91%E7%BB%9CGoogLeNet/</id>
    <published>2025-04-28T10:43:11.000Z</published>
    <updated>2025-04-28T10:55:46.941Z</updated>
    
    <content type="html"><![CDATA[<p>GoogLeNet<br>第一个可以做到超过100层的卷积神经网络<br>致敬LeNet<br>Inception块:<br>使用不同窗口大小的卷积层<br><img src="/2025/04/28/%E5%90%AB%E5%B9%B6%E8%A1%8C%E8%BF%9E%E7%BB%93%E7%9A%84%E7%BD%91%E7%BB%9CGoogLeNet/image-2.png" alt="alt text"></p><p>GoogLeNet<br><img src="/2025/04/28/%E5%90%AB%E5%B9%B6%E8%A1%8C%E8%BF%9E%E7%BB%93%E7%9A%84%E7%BD%91%E7%BB%9CGoogLeNet/image-3.png" alt="alt text"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;GoogLeNet&lt;br&gt;第一个可以做到超过100层的卷积神经网络&lt;br&gt;致敬LeNet&lt;br&gt;Inception块:&lt;br&gt;使用不同窗口大小的卷积层&lt;br&gt;&lt;img src=&quot;/2025/04/28/%E5%90%AB%E5%B9%B6%E8%A1%8C%E8%BF%9E</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网络中的网络NIN</title>
    <link href="https://jiyexingzou.github.io/2025/04/28/%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E7%BD%91%E7%BB%9CNIN/"/>
    <id>https://jiyexingzou.github.io/2025/04/28/%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E7%BD%91%E7%BB%9CNIN/</id>
    <published>2025-04-28T10:09:14.000Z</published>
    <updated>2025-04-28T10:28:38.664Z</updated>
    
    <content type="html"><![CDATA[<p>卷积层需要较少的参数<br>但卷积层后的第一个全连接层的参数很高<br>参数的计算&#x3D;输入的通道数x输出的通道数x高x宽<br>VGG占用的内存非常的大<br>NIN的思想就是，完全不要全连接层<br>MLP<br>一个卷积层加两个全连接层<br>整体架构:<br>无全连接层<br>交替使用NIN块和步幅为2的最大池化层<br>逐步减小高宽和增大通道数<br>最后使用全局平均池化层得到输出<br>其输入通道数是类别数</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;卷积层需要较少的参数&lt;br&gt;但卷积层后的第一个全连接层的参数很高&lt;br&gt;参数的计算&amp;#x3D;输入的通道数x输出的通道数x高x宽&lt;br&gt;VGG占用的内存非常的大&lt;br&gt;NIN的思想就是，完全不要全连接层&lt;br&gt;MLP&lt;br&gt;一个卷积层加两个全连接层&lt;br&gt;整体架构:&lt;br&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用块的网络VGG</title>
    <link href="https://jiyexingzou.github.io/2025/04/25/%E4%BD%BF%E7%94%A8%E5%9D%97%E7%9A%84%E7%BD%91%E7%BB%9CVGG/"/>
    <id>https://jiyexingzou.github.io/2025/04/25/%E4%BD%BF%E7%94%A8%E5%9D%97%E7%9A%84%E7%BD%91%E7%BB%9CVGG/</id>
    <published>2025-04-25T11:44:10.000Z</published>
    <updated>2025-04-28T10:12:18.376Z</updated>
    
    <content type="html"><![CDATA[<p>VGG<br>能不能更深更大获得更好的精度<br>更多的全连接层<br>更多的卷积层<br>将卷积层组合成块<br><img src="/2025/04/25/%E4%BD%BF%E7%94%A8%E5%9D%97%E7%9A%84%E7%BD%91%E7%BB%9CVGG/image.png" alt="alt text"><br>深但窄效果更好<br>多个VGG块后接全连接层<br>不同次数的重复块得到不同的架构<br>VGG-16，VGG-19<br>更大更深的AlexNet<br>非常的占内存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> torch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line"><span class="comment"># VGG块的实现</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vgg_block</span>(<span class="params">num_convs, in_channels, out_channels</span>):</span><br><span class="line">    layers = []</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(num_convs):</span><br><span class="line">        layers.append(nn.Conv2d(in_channels, out_channels,</span><br><span class="line">                                kernel_size=<span class="number">3</span>, padding=<span class="number">1</span>))</span><br><span class="line">        layers.append(nn.ReLU())</span><br><span class="line">        in_channels = out_channels</span><br><span class="line">    layers.append(nn.MaxPool2d(kernel_size=<span class="number">2</span>,stride=<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> nn.Sequential(*layers)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">conv_arch = ((<span class="number">1</span>, <span class="number">64</span>), (<span class="number">1</span>, <span class="number">128</span>), (<span class="number">2</span>, <span class="number">256</span>), (<span class="number">2</span>, <span class="number">512</span>), (<span class="number">2</span>, <span class="number">512</span>))</span><br><span class="line"></span><br><span class="line">    conv_blks = []</span><br><span class="line">    in_channels = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 卷积层部分</span></span><br><span class="line">    <span class="keyword">for</span> (num_convs, out_channels) <span class="keyword">in</span> conv_arch:</span><br><span class="line">        conv_blks.append(vgg_block(num_convs, in_channels, out_channels))</span><br><span class="line">        in_channels = out_channels</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nn.Sequential(</span><br><span class="line">        *conv_blks, nn.Flatten(),</span><br><span class="line">        <span class="comment"># 全连接层部分</span></span><br><span class="line">        nn.Linear(out_channels * <span class="number">7</span> * <span class="number">7</span>, <span class="number">4096</span>), nn.ReLU(), nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">        nn.Linear(<span class="number">4096</span>, <span class="number">4096</span>), nn.ReLU(), nn.Dropout(<span class="number">0.5</span>),</span><br><span class="line">        nn.Linear(<span class="number">4096</span>, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">net = vgg(conv_arch)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;VGG&lt;br&gt;能不能更深更大获得更好的精度&lt;br&gt;更多的全连接层&lt;br&gt;更多的卷积层&lt;br&gt;将卷积层组合成块&lt;br&gt;&lt;img src=&quot;/2025/04/25/%E4%BD%BF%E7%94%A8%E5%9D%97%E7%9A%84%E7%BD%91%E7%BB%9CVGG</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>近期目标与反思</title>
    <link href="https://jiyexingzou.github.io/2024/11/25/%E8%BF%91%E6%9C%9F%E7%9B%AE%E6%A0%87%E4%B8%8E%E5%8F%8D%E6%80%9D/"/>
    <id>https://jiyexingzou.github.io/2024/11/25/%E8%BF%91%E6%9C%9F%E7%9B%AE%E6%A0%87%E4%B8%8E%E5%8F%8D%E6%80%9D/</id>
    <published>2024-11-25T12:49:44.000Z</published>
    <updated>2024-11-25T13:27:52.387Z</updated>
    
    <content type="html"><![CDATA[<p>好久没更新个人网站了，来冒个泡</p><p>还是渐渐走上了正轨</p><p>开始备赛，组好了队，甚至还有学长帮忙我哭死</p><p>反思：现在报的一些比赛还没有什么含金量，如果要面向就业需要打一些和嵌入式和ai相关的竞赛</p><p>放一张纱雾美图开心一下吧</p><p><img src="/2024/11/25/%E8%BF%91%E6%9C%9F%E7%9B%AE%E6%A0%87%E4%B8%8E%E5%8F%8D%E6%80%9D/74744256_p0_master1200.jpg" alt="前辈，那个我喜欢你！" title="前辈，那个我喜欢你！"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;好久没更新个人网站了，来冒个泡&lt;/p&gt;
&lt;p&gt;还是渐渐走上了正轨&lt;/p&gt;
&lt;p&gt;开始备赛，组好了队，甚至还有学长帮忙我哭死&lt;/p&gt;
&lt;p&gt;反思：现在报的一些比赛还没有什么含金量，如果要面向就业需要打一些和嵌入式和ai相关的竞赛&lt;/p&gt;
&lt;p&gt;放一张纱雾美图开心一下吧&lt;/p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>竞赛分享</title>
    <link href="https://jiyexingzou.github.io/2024/10/25/%E7%AB%9E%E8%B5%9B%E5%88%86%E4%BA%AB/"/>
    <id>https://jiyexingzou.github.io/2024/10/25/%E7%AB%9E%E8%B5%9B%E5%88%86%E4%BA%AB/</id>
    <published>2024-10-25T08:14:15.000Z</published>
    <updated>2024-10-25T09:43:05.558Z</updated>
    
    <content type="html"><![CDATA[<p>服创，计设，华为ICT大赛，蓝桥杯等比赛经验分享</p><h1 id="1-电子科技大学保研政策"><a href="#1-电子科技大学保研政策" class="headerlink" title="1. 电子科技大学保研政策"></a>1. 电子科技大学保研政策</h1><p>信软官网搜推免.</p><p>保研流程<br>排名百分之29左右<br>保研名额<br>科研经历</p><p>注意前五学期成绩排名<br>我还有3&#x2F;5的机会,抓住机会</p><p>保研综合测评成绩</p><h1 id="学科竞赛"><a href="#学科竞赛" class="headerlink" title="学科竞赛"></a>学科竞赛</h1><p>能力培养:编程能力,技术能力,系统能力</p><p>就业：百度之星，大疆robomaster，robocon，华为ICT大赛。<br>竞赛中提出的算法创新<br>知识产权，专利，论文.</p><p>完善的竞赛保障</p><p>国三才不会处于劣势</p><p>就业向:<br>高水平企业赞助硬核比赛</p><p>服创，计设，蓝桥，信安。ppt大赛<br>网挑：中国高校计算机大赛</p><p>服创项目投计算机设计大赛</p><p>嵌入式:全国大学生嵌入式芯片与系统设计大赛</p><p>蓝桥杯：电子赛难度低于软件赛</p><p>ppt大赛<br>逻辑是否落地，需求是否真实，吹的天花乱坠<br>正态分布 &#x3D; 高斯分布<br>算法创新，名字起的长一点。高大上</p><p>找人采访，比如找公安局的民警采访，<br>找公司让人签署合同，让别人感觉你的非常高级.</p><p>最重要的是要志同道合。</p><p>组队阶段保证志向，队友要负责，<br>确定方向是要保研</p><p>戴瑞婷老师！！！！</p><h2 id="组队"><a href="#组队" class="headerlink" title="组队"></a>组队</h2><p>开发技术需要覆盖:技术栈：前后端，算法，(硬件)</p><p>软实力需要覆盖：审美水平在线(及其重要),视频剪辑，外箱点的，擅长演讲的，细心的<br>没有覆盖这些怎么办呢？<br>    淘宝，小红书，咸鱼外包。<br>    每个组一定会有优势方案</p><p>去小红书找做ppt的。<br>个人建议不要负责躲雨两个项目。</p><h2 id="团队合作"><a href="#团队合作" class="headerlink" title="团队合作"></a>团队合作</h2><p>服创大赛命题，</p><p>尽量寒假内完成项目开发。前端做的很美观，精细.</p><p>算法，复现，改进，顶会高水平论文。</p><p>团队沟通<br>    每周开会</p><p>使用飞书知识库<br>    十分遍历的多人在线合作平台</p><p>多和指导老师，学长学姐沟通</p><h1 id="服创"><a href="#服创" class="headerlink" title="服创"></a>服创</h1><p>视频做的好<br>服务外包</p><p>有硬件是超级加分乡</p><h1 id="计设"><a href="#计设" class="headerlink" title="计设"></a>计设</h1><p>评委几乎没有懂计算机技术的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;服创，计设，华为ICT大赛，蓝桥杯等比赛经验分享&lt;/p&gt;
&lt;h1 id=&quot;1-电子科技大学保研政策&quot;&gt;&lt;a href=&quot;#1-电子科技大学保研政策&quot; class=&quot;headerlink&quot; title=&quot;1. 电子科技大学保研政策&quot;&gt;&lt;/a&gt;1. 电子科技大学保研政策&lt;/h1</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>大二竞赛展望</title>
    <link href="https://jiyexingzou.github.io/2024/10/22/%E5%A4%A7%E4%BA%8C%E7%AB%9E%E8%B5%9B%E5%B1%95%E6%9C%9B/"/>
    <id>https://jiyexingzou.github.io/2024/10/22/%E5%A4%A7%E4%BA%8C%E7%AB%9E%E8%B5%9B%E5%B1%95%E6%9C%9B/</id>
    <published>2024-10-22T07:44:53.000Z</published>
    <updated>2024-10-22T07:47:22.291Z</updated>
    
    <content type="html"><![CDATA[<p>蓝桥杯我选择报python组</p><p>服创赛和计算机设计赛我也打算参加</p><p>希望一年以后能有好成果</p><p>我也想要成为github全是绿点的人o(╥﹏╥)o</p><p><img src="/2024/10/22/%E5%A4%A7%E4%BA%8C%E7%AB%9E%E8%B5%9B%E5%B1%95%E6%9C%9B/fac2433f0441c3454ea4eed41c259074.jpg" alt="alt text" title="放一张图在这里激励我自己"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;蓝桥杯我选择报python组&lt;/p&gt;
&lt;p&gt;服创赛和计算机设计赛我也打算参加&lt;/p&gt;
&lt;p&gt;希望一年以后能有好成果&lt;/p&gt;
&lt;p&gt;我也想要成为github全是绿点的人o(╥﹏╥)o&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2024/10/22/%E5%A4%A7%E4%BA%8</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker入门与配置</title>
    <link href="https://jiyexingzou.github.io/2024/10/19/docker%E5%85%A5%E9%97%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>https://jiyexingzou.github.io/2024/10/19/docker%E5%85%A5%E9%97%A8%E4%B8%8E%E9%85%8D%E7%BD%AE/</id>
    <published>2024-10-19T07:17:01.000Z</published>
    <updated>2024-10-21T07:41:11.625Z</updated>
    
    <content type="html"><![CDATA[<p>docker官方文档:<br><a href="https://docs.docker.com/get-started/introduction/get-docker-desktop/">https://docs.docker.com/get-started/introduction/get-docker-desktop/</a></p><p>first docker</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;docker官方文档:&lt;br&gt;&lt;a href=&quot;https://docs.docker.com/get-started/introduction/get-docker-desktop/&quot;&gt;https://docs.docker.com/get-started/introdu</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>批评与自我批评</title>
    <link href="https://jiyexingzou.github.io/2024/10/15/%E6%89%B9%E8%AF%84%E4%B8%8E%E8%87%AA%E6%88%91%E6%89%B9%E8%AF%84/"/>
    <id>https://jiyexingzou.github.io/2024/10/15/%E6%89%B9%E8%AF%84%E4%B8%8E%E8%87%AA%E6%88%91%E6%89%B9%E8%AF%84/</id>
    <published>2024-10-15T07:13:57.000Z</published>
    <updated>2024-10-15T08:32:22.020Z</updated>
    
    <content type="html"><![CDATA[<p>最近这几天，发现了我一个最大的问题，就是心存侥幸，总是在不该偷懒的地偷懒，最近发生的两件事，让我深刻意识到了这样做的不好</p><h3 id="未能在入党积极分子中成功结业"><a href="#未能在入党积极分子中成功结业" class="headerlink" title="未能在入党积极分子中成功结业"></a>未能在入党积极分子中成功结业</h3><p><strong>事情经过</strong>:<br>起因：没有做每日日程提醒，导致忘记去上入党积极分子的第二次课<br>当时没有能够补救的措施，<strong>心存侥幸</strong>以为伪造辅导员签字可以请假，结果失败</p><p>即使是这样还没长教训，最后要求写两千字的学习证明，由于偷懒只写了1000字，并且书写很乱</p><h3 id="未能拿到1000奖学金"><a href="#未能拿到1000奖学金" class="headerlink" title="未能拿到1000奖学金"></a>未能拿到1000奖学金</h3><p>这个纯纯是自己的锅，在申请奖学金页面，有一个申请理由，自己很敷衍的填了上去，结果最终没有通过专项奖学金。</p><h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>该如何改正？</p><ol><li>制定每日日程表，做到有事情填上去及时提醒自己。</li><li>绝不能有这种懈怠的思想，这样会让你失去很多的机会</li></ol><p>此外，我还有每日不知道该做什么，三天打鱼，两天晒网的这种态势<br>可以称之为迷惘。</p><p>机会?<br>有同学找我打服创，正在找队友<br>我应该及时的去询问</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近这几天，发现了我一个最大的问题，就是心存侥幸，总是在不该偷懒的地偷懒，最近发生的两件事，让我深刻意识到了这样做的不好&lt;/p&gt;
&lt;h3 id=&quot;未能在入党积极分子中成功结业&quot;&gt;&lt;a href=&quot;#未能在入党积极分子中成功结业&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>K210快速上手</title>
    <link href="https://jiyexingzou.github.io/2024/10/08/K210%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/"/>
    <id>https://jiyexingzou.github.io/2024/10/08/K210%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</id>
    <published>2024-10-08T15:09:39.000Z</published>
    <updated>2024-10-08T15:10:08.861Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/small_po_kid/article/details/113762110">https://blog.csdn.net/small_po_kid/article/details/113762110</a></p><p>咱先放个网址在这里，之后再填坑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/small_po_kid/article/details/113762110&quot;&gt;https://blog.csdn.net/small_po_kid/article/details/113762110&lt;/a&gt;&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Ollama本地部署</title>
    <link href="https://jiyexingzou.github.io/2024/10/08/Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/"/>
    <id>https://jiyexingzou.github.io/2024/10/08/Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/</id>
    <published>2024-10-08T14:34:33.000Z</published>
    <updated>2024-10-08T15:06:42.342Z</updated>
    
    <content type="html"><![CDATA[<p>llama作为一个开源模型<br>在ollama官网下载<br><a href="https://ollama.com/">https://ollama.com/</a></p><p>clone llama的git库即可直接本地部署ai<br>完整教程<br><a href="https://www.cnblogs.com/obullxl/p/18295202/NTopic2024071001">https://www.cnblogs.com/obullxl/p/18295202/NTopic2024071001</a></p><p>基于 WebUI 部署 Ollama 可视化对话界面<br>Ollama自带控制台对话界面体验总归是不太好，接下来部署 Web 可视化聊天界面：</p><p>下载并安装 Node.js 工具：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a><br>下载ollama-webui工程代码：git clone <a href="https://github.com/ollama-webui/ollama-webui-lite">https://github.com/ollama-webui/ollama-webui-lite</a> ollama-webui<br>切换ollama-webui代码的目录：cd ollama-webui<br>设置 Node.js 工具包镜像源（下载提速）：npm config set registry <a href="http://mirrors.cloud.tencent.com/npm/">http://mirrors.cloud.tencent.com/npm/</a><br>安装 Node.js 依赖的工具包：npm install<br>最后，启动 Web 可视化界面：npm run dev</p><p><img src="/2024/10/08/Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/05.jpg"></p><p>如果看到以上输出，代表 Web 可视化界面已经成功了！</p><p>浏览器打开 Web 可视化界面：<a href="http://localhost:3000/">http://localhost:3000/</a></p><p><img src="/2024/10/08/Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/06.png"></p><p>接下来还可以通过python api和java api对于该大语言模型进行封装，上述网址中有，不再赘述</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;llama作为一个开源模型&lt;br&gt;在ollama官网下载&lt;br&gt;&lt;a href=&quot;https://ollama.com/&quot;&gt;https://ollama.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;clone llama的git库即可直接本地部署ai&lt;br&gt;完整教程&lt;br&gt;&lt;a hre</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>国庆七天总结</title>
    <link href="https://jiyexingzou.github.io/2024/10/07/%E5%9B%BD%E5%BA%86%E4%B8%83%E5%A4%A9%E6%80%BB%E7%BB%93/"/>
    <id>https://jiyexingzou.github.io/2024/10/07/%E5%9B%BD%E5%BA%86%E4%B8%83%E5%A4%A9%E6%80%BB%E7%BB%93/</id>
    <published>2024-10-07T10:32:34.000Z</published>
    <updated>2024-10-07T10:49:49.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的国庆过的怎么样！"><a href="#我的国庆过的怎么样！" class="headerlink" title="我的国庆过的怎么样！"></a>我的国庆过的怎么样！</h1><p><em><strong>-国庆七天，我是怎么过的呢？我为什么要写一个总结呢？-</strong></em><br><strong>–写在文章开头</strong></p><p>现在是十月七号，也是国庆七天乐的最后一个晚上了，就我现在的感觉来看，我觉得我的国庆七天过得并不是很愉快。</p><p><strong>为什么!?</strong></p><p>可能是，我感觉，我在国庆的第一天，就没有想好我这几天究竟要干嘛，有一种既要又要的感觉。<br>可以说，假期的一开始，我是想要好好学习七天的。当时唯一给自己定的玩耍的一天就是十月四号的cd28.</p><p>但是，我干了些什么呢？<br>第一天，听说群友要去唱k，我就去了，实际上一共也没有唱几首歌，在那里扣了一个下午的手机。由于我的惰性，在吃喝玩乐回来之后，选择了直接回家。<br>第二天，在家里的我就更加放飞去玩了，但是心里又没有想好究竟玩什么。就在内耗中过去了一天，这一天去检查了一下身体，结果检查出来多项指标不正常，更让我忧心忡忡。<br>第三天，我打算的是早上回学校，但是由于我的拖沓，也是在浑浑噩噩之中玩到了下午，回到了学校，想着明天cd28，干脆今天也不学习了<br>第四天，逛了一天的展，晚上回来更是无心学习<br>第五天，终于打算要学习了，结果在图书馆一个下午就写了几道题，自己更多的时间在内耗和扣手机中度过，晚上被人叫出打了光棒，录了视频，我却还挺开心的？<br>第六天，无心学习，扣手机到12点起床，一个下午同样没做几道题，想要配置树莓派的环境没找到网线，想要学习java没看下去，自己心里还一直惦记着学习rust<br>第七天，早上10点起床，在宿舍床上内耗了一个下午，晚上到图书馆开始写了这个文档。</p><p>可以说，这几天，我是纯粹没有想好该怎么安排，导致七天玩也没玩开心，也没有学到什么。</p><p>这七天让我反思了一下，做事情得有一个自己的计划，告诉自己什么时候该玩，什么时候该学习？</p><p>真的是兴趣问题吗？说实话，现在我干的都是我自己目前最感兴趣的。但是现在还是一无所成，玩倒是玩了不少。</p><p><strong>现在我争取做到以下几点</strong></p><ol><li>放下手机</li><li>有计划的做事</li><li>早睡(这也是国庆七天最困扰我的)</li><li>找到自己真正想做的，做出一定的规模!</li></ol><h2 id="这就是我国庆七天的想法了"><a href="#这就是我国庆七天的想法了" class="headerlink" title="这就是我国庆七天的想法了"></a>这就是我国庆七天的想法了</h2><p>最后放一张和泉纱雾吧</p><p><img src="/2024/10/07/%E5%9B%BD%E5%BA%86%E4%B8%83%E5%A4%A9%E6%80%BB%E7%BB%93/1.jpg" alt="可爱的和泉纱雾" title="在10月六号换了一个头像，很多人问我为什么换，可能是因为我想要洗心革面吧"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;我的国庆过的怎么样！&quot;&gt;&lt;a href=&quot;#我的国庆过的怎么样！&quot; class=&quot;headerlink&quot; title=&quot;我的国庆过的怎么样！&quot;&gt;&lt;/a&gt;我的国庆过的怎么样！&lt;/h1&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;-国庆七天，我是怎么过的呢？我为什么要写一个总结呢？</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>常用网站指北</title>
    <link href="https://jiyexingzou.github.io/2024/10/07/%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99%E6%8C%87%E5%8C%97/"/>
    <id>https://jiyexingzou.github.io/2024/10/07/%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99%E6%8C%87%E5%8C%97/</id>
    <published>2024-10-07T10:12:49.000Z</published>
    <updated>2024-10-16T16:46:49.016Z</updated>
    
    <content type="html"><![CDATA[<p>计算机教育中缺失的一课<br><a href="https://missing-semester-cn.github.io/">https://missing-semester-cn.github.io/</a><br>CS自学指南<br><a href="https://csdiy.wiki/">https://csdiy.wiki/</a><br>微软官方的Learn<br><a href="https://learn.microsoft.com/zh-cn/">https://learn.microsoft.com/zh-cn/</a><br>GitHub<br><a href="https://github.com/">https://github.com/</a><br>语言学习<br><a href="https://www.runoob.com/">https://www.runoob.com/</a><br>kicad官网指南<br><a href="https://dev-docs.kicad.org/zh-cn/">https://dev-docs.kicad.org/zh-cn/</a><br>renpy引擎官方文档<br><a href="https://doc.renpy.cn/zh-CN">https://doc.renpy.cn/zh-CN</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;计算机教育中缺失的一课&lt;br&gt;&lt;a href=&quot;https://missing-semester-cn.github.io/&quot;&gt;https://missing-semester-cn.github.io/&lt;/a&gt;&lt;br&gt;CS自学指南&lt;br&gt;&lt;a href=&quot;https://</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>树莓派的环境配置遇见的问题</title>
    <link href="https://jiyexingzou.github.io/2024/10/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://jiyexingzou.github.io/2024/10/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2024-10-06T13:05:07.000Z</published>
    <updated>2024-10-07T10:49:51.610Z</updated>
    
    <content type="html"><![CDATA[<p>在配置树莓派的基础环境时，由于我个人没有屏幕，所以需要远程获取树莓派的ip地址。又由于我身边又没有网线，所以我给出我的解决方案<br>我尝试的方法,使用手机app fing,在手机和树莓派连接同一个WiFi的情况下,由于树莓派的主机名一般都是raspberry,所以很容易查出树莓派的ip地址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在配置树莓派的基础环境时，由于我个人没有屏幕，所以需要远程获取树莓派的ip地址。又由于我身边又没有网线，所以我给出我的解决方案&lt;br&gt;我尝试的方法,使用手机app fing,在手机和树莓派连接同一个WiFi的情况下,由于树莓派的主机名一般都是raspberry,所以很容易查</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>k210</title>
    <link href="https://jiyexingzou.github.io/2024/08/23/k210/"/>
    <id>https://jiyexingzou.github.io/2024/08/23/k210/</id>
    <published>2024-08-23T14:28:28.000Z</published>
    <updated>2024-08-23T14:37:56.669Z</updated>
    
    <content type="html"><![CDATA[<p>什么是Maix bit，它和K210是什么关系；连接硬件并测试</p><p>MAIX Bit开发板是SiPEED公司MAIX产品线的一员，基于嘉楠堪智科技的边缘智能计算芯片K210(RISC-V架构 64位双核)设计的一款AIOT开发板</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;什么是Maix bit，它和K210是什么关系；连接硬件并测试&lt;/p&gt;
&lt;p&gt;MAIX Bit开发板是SiPEED公司MAIX产品线的一员，基于嘉楠堪智科技的边缘智能计算芯片K210(RISC-V架构 64位双核)设计的一款AIOT开发板&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>USART串口协议</title>
    <link href="https://jiyexingzou.github.io/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/"/>
    <id>https://jiyexingzou.github.io/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/</id>
    <published>2024-08-18T14:24:03.000Z</published>
    <updated>2024-08-23T14:32:02.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通信接口类型"><a href="#通信接口类型" class="headerlink" title="通信接口类型"></a>通信接口类型</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image.png" alt="alt text"><br>双工模式：<br>全双工：通信双方能够同时进行双向通信</p><h2 id="串口发送"><a href="#串口发送" class="headerlink" title="串口发送"></a>串口发送</h2><h2 id="串口发送-接收"><a href="#串口发送-接收" class="headerlink" title="串口发送+接收"></a>串口发送+接收</h2><p>串口时序</p><h2 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-1.png" alt="alt text"></p><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-2.png" alt="alt text"></p><h2 id="电平标准"><a href="#电平标准" class="headerlink" title="电平标准"></a>电平标准</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-3.png" alt="alt text"></p><h2 id="串口参数及时序"><a href="#串口参数及时序" class="headerlink" title="串口参数及时序"></a>串口参数及时序</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-4.png" alt="alt text"></p><h2 id="USART外设"><a href="#USART外设" class="headerlink" title="USART外设"></a>USART外设</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-5.png" alt="alt text"></p><h2 id="USART框图"><a href="#USART框图" class="headerlink" title="USART框图"></a>USART框图</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-6.png" alt="alt text"></p><h2 id="波特率发生器"><a href="#波特率发生器" class="headerlink" title="波特率发生器"></a>波特率发生器</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-7.png" alt="alt text"></p><h2 id="HEX数据包"><a href="#HEX数据包" class="headerlink" title="HEX数据包"></a>HEX数据包</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-8.png" alt="alt text"><br>固定包长和可变包长的选择问题</p><h2 id="文本数据包"><a href="#文本数据包" class="headerlink" title="文本数据包"></a>文本数据包</h2><p><img src="/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F%E8%AE%AE/image-9.png" alt="alt text"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;通信接口类型&quot;&gt;&lt;a href=&quot;#通信接口类型&quot; class=&quot;headerlink&quot; title=&quot;通信接口类型&quot;&gt;&lt;/a&gt;通信接口类型&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2024/08/18/USART%E4%B8%B2%E5%8F%A3%E5%8D%8F</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>TIM输出比较</title>
    <link href="https://jiyexingzou.github.io/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/"/>
    <id>https://jiyexingzou.github.io/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/</id>
    <published>2024-08-12T09:07:14.000Z</published>
    <updated>2024-08-18T14:22:24.085Z</updated>
    
    <content type="html"><![CDATA[<h2 id="输出比较简介-OC"><a href="#输出比较简介-OC" class="headerlink" title="输出比较简介 OC"></a>输出比较简介 OC</h2><p><img src="/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/image-1.png" alt="alt text"></p><p>用于输出PWM波形</p><h2 id="PWM波形"><a href="#PWM波形" class="headerlink" title="PWM波形"></a>PWM波形</h2><p><img src="/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/image-2.png" alt="alt text"></p><p>脉冲宽度调制<br>等效的生成一个模拟信号的输出<br>具有惯性的系统才能使用PWM</p><p>PWM三个参数<br>频率<br>占空比等效关系是线性的<br>分辨率</p><h2 id="输出比较通道"><a href="#输出比较通道" class="headerlink" title="输出比较通道"></a>输出比较通道</h2><p><img src="/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/image-3.png" alt="alt text"><br><img src="/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/image-4.png" alt="alt text"></p><p>输出比较模式<br><img src="/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/image-5.png" alt="alt text"></p><p>PWM模式1<br>PWM模式2</p><h2 id="PWM基本结构"><a href="#PWM基本结构" class="headerlink" title="PWM基本结构"></a>PWM基本结构</h2><p><img src="/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/image-6.png" alt="alt text"></p><h2 id="PWM参数计算"><a href="#PWM参数计算" class="headerlink" title="PWM参数计算"></a>PWM参数计算</h2><p><img src="/2024/08/12/TIM%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/image-7.png" alt="alt text"></p><h2 id="STM32外部设备"><a href="#STM32外部设备" class="headerlink" title="STM32外部设备"></a>STM32外部设备</h2><p>舵机<br>直流电机</p><p>电机驱动模块</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;输出比较简介-OC&quot;&gt;&lt;a href=&quot;#输出比较简介-OC&quot; class=&quot;headerlink&quot; title=&quot;输出比较简介 OC&quot;&gt;&lt;/a&gt;输出比较简介 OC&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2024/08/12/TIM%E8%BE%93%E5%87%B</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>TIM定时中断</title>
    <link href="https://jiyexingzou.github.io/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/"/>
    <id>https://jiyexingzou.github.io/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/</id>
    <published>2024-08-03T07:25:43.000Z</published>
    <updated>2024-08-12T09:05:43.747Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image.png" alt="alt text"></p><h2 id="定时器类型"><a href="#定时器类型" class="headerlink" title="定时器类型"></a>定时器类型</h2><p><img src="/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image-1.png" alt="alt text"></p><h3 id="高级定时器"><a href="#高级定时器" class="headerlink" title="高级定时器"></a>高级定时器</h3><p><strong>基本定时器框图</strong><br><img src="/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image-2.png" alt="alt text"><br>向上计数<br><strong>通用定时器</strong><br><img src="/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image-4.png" alt="alt text"><br>向上计数，向下计数，中央对齐模式<br><strong>高级定时器</strong><br>增加部分了解即可</p><h2 id="定时中断基本结构"><a href="#定时中断基本结构" class="headerlink" title="定时中断基本结构"></a>定时中断基本结构</h2><p><img src="/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image-5.png" alt="alt text"></p><p><strong>预分频器时序</strong><br><img src="/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image-6.png" alt="alt text"></p><p><strong>计数器时序</strong><br><img src="/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image-7.png" alt="alt text"></p><p>有预装时序 VS 无预装时序<br>有预装时序：有影子寄存器</p><p><strong>RCC时钟树</strong><br><img src="/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image-8.png" alt="alt text"></p><p>无论什么定时器，内部基准时钟都是72Mhz</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2024/08/03/TIM%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/image.png&quot; alt=&quot;alt text&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;定时器类型&quot;&gt;&lt;a href=&quot;#定时器类型&quot; class=&quot;heade</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>OLED显示屏</title>
    <link href="https://jiyexingzou.github.io/2024/08/03/OLED%E6%98%BE%E7%A4%BA%E5%B1%8F/"/>
    <id>https://jiyexingzou.github.io/2024/08/03/OLED%E6%98%BE%E7%A4%BA%E5%B1%8F/</id>
    <published>2024-08-03T06:36:04.000Z</published>
    <updated>2024-08-03T07:24:29.787Z</updated>
    
    <content type="html"><![CDATA[<p>学会了使用如何用OLED调试程序</p><p>以及如何用keil调试程序</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学会了使用如何用OLED调试程序&lt;/p&gt;
&lt;p&gt;以及如何用keil调试程序&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
